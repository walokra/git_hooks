#!/usr/bin/env bash

set -e

EXIT_CODE=0
ENV_PYTHON='/usr/bin/python'
COMMAND='/usr/bin/yamllint'
TEMPDIR=`mktemp -d`

if ((
        (ENV_PYTHON_RETV != 0) &&
        (YAMLLINT != 0)
)); then
    echo '`python` or `yamllint` not found.'
    exit 1
fi

# Run yamllint
oldrev=$1
newrev=$2
refname=$3

while read oldrev newrev refname; do
    
    # Get the file names, without directory, of the files that have been modified
    # between the new revision and the old revision
    files=`git diff --name-only ${oldrev} ${newrev}`

    # Get a list of all objects in the new revision
    objects=`git ls-tree --full-name -r ${newrev}`

    # Iterate over each of these files
    for file in ${files}; do

		# Search for the file name in the list of all objects
		object=`echo -e "${objects}" | egrep "(\s)${file}\$" | awk '{ print $3 }'`
        
		# If it's not present, then continue to the the next itteration
		if [ -z ${object} ]; 
		then 
			continue; 
		fi

        # Otherwise, create all the necessary sub directories in the new temp directory
        mkdir -p "${TEMPDIR}/`dirname ${file}`" &>/dev/null
        # and output the object content into it's original file name
        git cat-file blob ${object} > ${TEMPDIR}/${file}
			
    done;
done

# Now loop over each file in the temp dir to parse them for valid syntax
files_found=`find ${TEMPDIR} -name '*.yml'`
for fname in ${files_found}; do
    ${COMMAND} ${fname}
    if [[ $? -ne 0 ]];
    then
	  echo "ERROR: parser failed on ${fname}"
      BAD_FILE=1
    fi
done;

rm -rf ${TEMPDIR} &> /dev/null

if [[ $BAD_FILE -eq 1 ]]
then
  exit 1
fi

exit 0
